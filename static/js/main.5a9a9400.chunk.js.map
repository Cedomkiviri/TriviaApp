{"version":3,"sources":["components/TriviaSettings.js","components/Intro.js","components/Questions.js","components/Footer.js","components/Ending.js","components/Trivia.js","components/Main.js","index.js"],"names":["data","JSON","parse","yourUrl","Httpreq","XMLHttpRequest","open","send","responseText","GetData","TriviaSettings","props","handleChangeNumero","bind","handleChangeId","getTrivia","forEach","element","option","document","createElement","value","text","getElementById","add","GenerateCategories","e","this","handleChangeNquestions","target","setState","numero","handleChangeCategory","selected","className","style","marginBottom","marginTop","margin","name","id","onChange","type","min","max","nquestions","onClick","React","Component","Intro","category","score","round","Questions","state","selectedOption","checked","isOne","isTwo","isThree","isFour","handleOptionChange","check","nextQuestion","endTrivia","clearRadio","realanswer","increaseScore","backgroundColor","endMainTrivia","question","answer1","answer2","answer3","answer4","lenght","disabled","Footer","Ending","window","location","reload","newTrivia","url","Trivia","finished","console","log","res","Math","random","correct_answer","incorrect_answers","componentDidMount","length","Main","varcategory","varnquestions","ReactDOM","render"],"mappings":"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","file":"static/js/main.5a9a9400.chunk.js","sourcesContent":["import React from 'react'\nconst data = JSON.parse(GetData(\"https://opentdb.com/api_category.php\"))\nfunction GetData(yourUrl) {\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\", yourUrl, false);\n    Httpreq.send(null);\n    return Httpreq.responseText;\n\n}\n\nfunction GenerateCategories(data) {\n    data[\"trivia_categories\"].forEach(element => {\n        var option = document.createElement(\"option\");\n        option.value = element[\"id\"]\n        option.text = element[\"name\"]\n        \n        document.getElementById(\"categorias\").add(option)\n    });\n\n}\nclass TriviaSettings extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.handleChangeNumero = this.handleChangeNumero.bind(this)\n        this.handleChangeId = this.handleChangeId.bind(this)\n        this.getTrivia = this.getTrivia.bind(this)\n    }\n\n    componentDidMount() {\n        GenerateCategories(data)\n\n    }\n\n    handleChangeNumero(e){\n        this.props.handleChangeNquestions(e.target.value)\n        this.setState({\n            numero : e.target.value\n        })\n    }\n\n    handleChangeId(e){\n        this.props.handleChangeCategory(e.target.value)\n    }\n\n    getTrivia(){\n        this.setState({\n            selected : true\n        })\n    }\n\n    render() {\n        return (\n\n            <div className=\"intro border border-dark rounded text-center\" style={{ marginBottom: \"30px\" }}>\n\n                <div className=\"row d-flex justify-content-center  \" style={{ marginTop: \"30px\" }}>\n                    <h1>Welcome to TriviaApp</h1>\n                </div>\n\n                <div className=\"row d-flex justify-content-center  \" style = {{margin : \"20px\"}}>\n                    <h4>Choose category</h4>\n    \n                    <select name=\"categorias\" id=\"categorias\" onChange = {this.handleChangeId}>\n\n                    </select>\n                </div>\n\n                <div className=\"row d-flex justify-content-center  \">\n                    <h4>Choose the number of questions</h4>\n                   \n                </div>\n\n                <div className=\"row d-flex justify-content-center  \">\n                <input type=\"range\"  min=\"1\" max=\"30\" onChange = {this.handleChangeNumero}></input>\n        <h4 >{this.props.nquestions}</h4>\n                </div>\n        <button className=\"btn btn-dark \" onClick={this.props.getTrivia} style={{ margin: \"10px\" }}>Get Trivia</button>\n        \n            </div>\n        );\n\n     \n\n    }\n\n}\n\nexport default TriviaSettings","import React from 'react'\n\nclass Intro extends React.Component {\n\n    render() {\n        return (\n            <div className=\"intro border border-dark rounded text-center\" style={{ marginBottom: \"30px\" }}>\n\n                <div className=\"row d-flex justify-content-center  \" style={{ marginTop: \"30px\" }}>\n                    <h1>Welcome to this <b>{this.props.category} Trivia</b></h1>\n                </div>\n                <div className=\"row d-flex justify-content-center  \">\n                    <h4>For each question, <b>choose the correct answer.</b></h4>\n                </div>\n\n                <div className=\"row   \" style={{ margin: \"10px\" }}>\n                    <div className=\"col d-flex justify-content-center\"><p><b> Points:</b> {this.props.score}</p></div>\n                    <div className=\"col d-flex justify-content-center\"><p><b> Round:</b> {this.props.round}</p></div>\n\n\n                </div>\n            </div>\n        );\n\n\n    }\n\n}\n\nexport default Intro","import React from 'react'\n\nclass Questions extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedOption: \"\",\n            checked: false,\n            isOne : false,\n            isTwo : false,\n            isThree : false,\n            isFour : false,\n        }\n        this.handleOptionChange = this.handleOptionChange.bind(this);\n        this.check = this.check.bind(this);\n        this.nextQuestion = this.nextQuestion.bind(this);\n        this.endTrivia = this.endTrivia.bind(this)\n    }\n\n    handleOptionChange(e) {\n        if(!this.state.checked){\n            this.clearRadio()\n            this.setState({\n                selectedOption: e.target.value,\n             \n            })\n           // document.getElementById(\"td\"+e.target.id).style.backgroundColor =\"green\"  \n            if(e.target.id === \"1\"){\n                this.setState({\n                    isOne : true\n                 \n                })\n            }\n    \n            if(e.target.id === \"2\"){\n                this.setState({\n                    isTwo : true\n                 \n                })\n            }\n    \n            if(e.target.id === \"3\"){\n                this.setState({\n                    isThree : true\n                 \n                })\n            }\n    \n            if(e.target.id === \"4\"){\n                this.setState({\n                    isFour : true\n                 \n                })\n            }\n    \n        }\n        \n    }\n\n    check() {\n            if (this.state.selectedOption === \"\") {\n                return;\n            }\n            if (this.state.selectedOption === this.props.realanswer) {\n                this.props.increaseScore()\n                this.setState({\n                    checked: true\n                })\n                document.getElementById(this.state.selectedOption).style.backgroundColor= \"green\"\n            }else{\n                document.getElementById(this.state.selectedOption).style.backgroundColor = \"red\"\n            }\n            \n            this.setState({\n                checked: true\n            })\n\n        \n    }\n\n    endTrivia() {\n        this.props.endMainTrivia()\n    }\n\n    clearRadio(){\n        this.setState({\n            isOne : false,\n            isTwo : false,\n            isThree :false,\n            isFour : false,\n        })\n    }\n    nextQuestion() {\n        document.getElementById(this.state.selectedOption).style.backgroundColor = \"\"\n        this.props.nextQuestion()\n        this.clearRadio()\n        this.setState({\n            checked: 0, \n            selectedOption: \"\"\n        })\n    }\n    render() {\n        return (\n            <div className=\"container\">\n\n                <div className=\"row text-center d-flex justify-content-center\"><h1>{this.props.question}</h1></div>\n                <div className=\"row\">\n                    <div className=\"col d-flex justify-content-center\">\n                        <table className=\"table table-bordered \">\n                            <tbody>\n                                <tr>\n                                    <td className=\"text-center\" id={this.props.answer1} ><input type=\"radio\" id=\"1\" value={this.props.answer1} name=\"answer\" checked={this.state.isOne} onChange={this.handleOptionChange} ></input>{this.props.answer1}</td>\n                                    <td className=\"text-center\" id={this.props.answer2}><input type=\"radio\" id=\"2\" value={this.props.answer2} name=\"answer\" checked={this.state.isTwo} onChange={this.handleOptionChange}  ></input>{this.props.answer2}</td>\n\n                                </tr>\n                            </tbody>\n\n                            <tbody>\n                                <tr>\n                                    <td className=\"text-center\" id={this.props.answer3} ><input type=\"radio\" id=\"3\" value={this.props.answer3} name=\"answer\" checked={this.state.isThree} onChange={this.handleOptionChange}></input>{this.props.answer3}</td>\n                                    <td className=\"text-center \"id={this.props.answer4}><input type=\"radio\" id=\"4\" value={this.props.answer4} name=\"answer\" checked={this.state.isFour} onChange={this.handleOptionChange}></input>{this.props.answer4}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n\n\n                </div>\n                <div className=\"row  d-flex justify-content-center\"  >\n\n\n\n\n\n\n\n                    {this.props.round <= this.props.lenght && !this.state.checked ? <button disabled={this.state.checked} className=\"btn btn-dark \" onClick={this.check} style={{ margin: \"30px\" }}>Check</button> : null}\n                    {this.state.checked && this.props.round < this.props.lenght ? <button className=\"btn btn-info \" onClick={this.nextQuestion} style={{ margin: \"30px\" }}>Next Question</button> : null}\n                    {this.state.checked && this.props.round === this.props.lenght  ? <button className=\"btn btn-info \" onClick={this.endTrivia} style={{ margin: \"30px\" }}>End Trivia</button> : null}\n\n\n                </div>\n\n\n\n            </div>\n\n\n\n        );\n\n\n    }\n\n}\n\nexport default Questions","import React from 'react'\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <center>\n                <footer id=\"footer\">made by <b>Cedomka</b></footer>\n            </center>\n        );\n    }\n}\n\nexport default Footer","import React from 'react'\n\nclass Ending extends React.Component {\n    \n    newTrivia() {\n        // Recarga la pagina para una nueva trivia\n        window.location.reload();\n    }\n    render() {\n        return (\n            <div className=\"intro border border-dark rounded text-center\" style={{ marginBottom: \"20px\" }}>\n\n                <div className=\"row d-flex justify-content-center  \" style={{ marginTop: \"20px\" }}>\n                <h1>Final Score: <b>{this.props.score}</b></h1>\n                </div>\n                <div className=\"row d-flex justify-content-center  \">\n                {(this.props.score/this.props.lenght)*100 >=65? <h4> <b>Excellent</b>, keep it up</h4>: <h4><b>Better luck</b> next time</h4>}\n  \n                </div>\n\n                <div className=\"row  d-flex justify-content-center \">\n                <button className=\"btn btn-info \" onClick={this.newTrivia} style={{ margin: \"10px\" }}>New trivia</button>\n\n                </div>\n            </div>\n        );\n\n\n    }\n\n}\n\nexport default Ending","import React from 'react'\nimport Intro from './Intro'\nimport Questions from './Questions'\nimport Footer from './Footer'\nimport Ending from './Ending'\n\nfunction GetData(category,nquestions) {\n    var url = `https://opentdb.com/api.php?amount=${nquestions}&category=${category}&difficulty=easy&type=multiple`\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\", url, false);\n    Httpreq.send(null);\n    return JSON.parse(Httpreq.responseText); \n    \n}\n\n\n\n\nclass Trivia extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            data : GetData(this.props.category,this.props.nquestions),\n            realanswer: \"\",\n            answer1: \"\",\n            answer2: \"\",\n            answer3: \"\",\n            answer4: \"\",\n            round: 0,\n            score: 0,\n            finished: false,\n\n        }\n\n        console.log(this.state.data[\"resuls\"])\n        this.nextQuestion = this.nextQuestion.bind(this)\n        this.increaseScore = this.increaseScore.bind(this)\n        this.endMainTrivia = this.endMainTrivia.bind(this)\n    }\n\n\n    componentDidMount() {\n        \n        /* Este codigo genera un numero random que sera \n        la posicion en donde se colocara la respuesta correcta.\n\n        Luego coloca cada respuesta en su lugar.\n        */\n        var res = Math.round(Math.random() * (4 - 1) + 1)\n\n        this.setState({\n            round: this.state.round + 1,\n            realanswer: this.state.data[\"results\"][this.state.round].correct_answer,\n            question: this.state.data[\"results\"][this.state.round].question\n        })\n        if (res === 1) {\n            this.setState({\n                answer1: this.state.data[\"results\"][this.state.round].correct_answer,\n                answer2: this.state.data[\"results\"][this.state.round].incorrect_answers[0],\n                answer3: this.state.data[\"results\"][this.state.round].incorrect_answers[1],\n                answer4: this.state.data[\"results\"][this.state.round].incorrect_answers[2]\n            })\n        }\n\n        if (res === 2) {\n\n            this.setState({\n                answer1: this.state.data[\"results\"][this.state.round].incorrect_answers[1],\n                answer2: this.state.data[\"results\"][this.state.round].correct_answer,\n                answer3: this.state.data[\"results\"][this.state.round].incorrect_answers[0],\n                answer4: this.state.data[\"results\"][this.state.round].incorrect_answers[2]\n            })\n\n        }\n\n        if (res === 3) {\n            this.setState({\n                answer1: this.state.data[\"results\"][this.state.round].incorrect_answers[1],\n                answer2: this.state.data[\"results\"][this.state.round].incorrect_answers[0],\n                answer3: this.state.data[\"results\"][this.state.round].correct_answer,\n                answer4: this.state.data[\"results\"][this.state.round].incorrect_answers[2],\n            })\n\n        }\n\n        if (res === 4) {\n            this.setState({\n                answer1: this.state.data[\"results\"][this.state.round].incorrect_answers[1],\n                answer2: this.state.data[\"results\"][this.state.round].incorrect_answers[0],\n                answer3: this.state.data[\"results\"][this.state.round].incorrect_answers[2],\n                answer4: this.state.data[\"results\"][this.state.round].correct_answer\n            })\n\n        }\n\n    }\n\n   \n    endMainTrivia() {\n        // Deja de monstrar el componente Questions\n        this.setState({\n            finished: true\n        })\n    }\n\n    increaseScore() {\n        // Esto incrementa el puntaje\n        this.setState({\n            score: this.state.score + 1\n        })\n    }\n\n\n    nextQuestion() {\n        //Pasa a la siguiente pregunta\n        this.componentDidMount()\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <Intro category={this.state.data[\"results\"][0].category} round={this.state.round} score={this.state.score} />\n\n                {!this.state.finished ? <Questions endMainTrivia={this.endMainTrivia} finished={this.state.finished} lenght={this.state.data[\"results\"].length} score={this.state.score} round={this.state.round} nextQuestion={this.nextQuestion} increaseScore={this.increaseScore} realanswer={this.state.realanswer} question={this.state.question} answer1={this.state.answer1} answer2={this.state.answer2} answer3={this.state.answer3} answer4={this.state.answer4} /> : null}\n\n                {this.state.finished ? <Ending score={this.state.score} lenght={this.state.data[\"results\"].length}/> : null}\n\n                \n                <Footer />\n            </div>\n        );\n\n\n    }\n\n}\n\nexport default Trivia","import React from 'react'\nimport TriviaSettings from './TriviaSettings'\nimport Trivia from './Trivia'\nclass Main extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state ={\n            category : \"9\",\n            nquestions : 30,\n            selected : false\n        }\n\n        this.handleChangeCategory = this.handleChangeCategory.bind(this)\n        this.handleChangeNquestions = this.handleChangeNquestions.bind(this)\n        this.getTrivia = this.getTrivia.bind(this)\n    }\n\n    handleChangeCategory(varcategory){\n        this.setState({\n            category : varcategory\n        })\n    }\n\n    handleChangeNquestions(varnquestions){\n        this.setState({\n            nquestions : varnquestions\n        })\n    }\n\n    getTrivia(){\n        this.setState({\n            selected : true\n        })\n    }\n\n    render() {\n        return (\n\n            <div className=\"text-center\" style={{ marginBottom: \"30px\" }}>\n            {!this.state.selected ? <TriviaSettings getTrivia = {this.getTrivia} nquestions = {this.state.nquestions}handleChangeNquestions = {this.handleChangeNquestions} handleChangeCategory = {this.handleChangeCategory}/> : null}               \n            \n            {this.state.selected ? <Trivia category = {this.state.category} nquestions = {this.state.nquestions}/> : null}\n\n            </div>\n        );\n\n     \n\n    }\n\n}\n\nexport default Main","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './components/Main'\n\n\nReactDOM.render(\n\n   <Main />\n    , document.getElementById(\"root\"));"],"sourceRoot":""}